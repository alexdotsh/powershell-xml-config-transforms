<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <spring xmlns="http://www.springframework.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.net ../../../../lib/spring.net/spring-objects-1.1.xsd">
    <context>
      <resource uri="config://spring/objects" />
      <context name="services">
        <resource uri="config://spring/services/objects" />
      </context>
    </context>
    <objects xmlns="http://www.springframework.net" default-autowire="constructor">
      <object name="SomeServicefactory" type="ServiceFactory" />
    </objects>
    <services>
      <objects xmlns="http://www.springframework.net" default-lazy-init="true">
        <object name="SystemConfiguration" type="SystemConfiguration">
          <constructor-arg name="ConfigCodes">
            <list element-type="string">
              <value>ValueAlpha</value>
			  	   <!-- Automate me --> <!-- use case, assume default value as per above, allow the powershell module to override this -->


              <value>ValueBeta</value>
			  	   <!-- Automate me --> <!-- use case, assume default value as per above, allow the powershell module to override this -->


            </list>
          </constructor-arg>
        </object>
      </objects>
    </services>
  </spring>

  <SystemConnections configTypeInfo="System.Configuration" DataProviderType="System.DAL.SqlDataProvider">
    <Connections>
      <SystemConnection Name="SOMEDATABASEALIAS" ConnectionString="Server=some server; Database=SOMEDATABASE; Integrated Security=SSPI;" Encrypted="false" />
	 <!-- Automate me --> <!-- use case, assume both attribute values above MUST be provided as a parameter in the powershell-->

	   
    </Connections>
  </SystemConnections>
  <GlobalConnections configTypeInfo="System.Configuration.GlobalConnections, System.Configuration" DataProviderType="System.DAL.SqlDataProvider" DataProviderAssembly="SomeDLL.dll">
    <Connections>
	
      <GlobalConnection Name="SOMEDATABASEALIAS" ConnectionString="Server=.\databases; Database=SOMEDATABASE; Integrated Security=SSPI;" Encrypted="false">
		 <!-- Automate me --> <!-- use case assume both values above must be provided and as a parameter in the powershell-->

		 
        <MonitoredSystems>
          <MonitoredSystem name="" />
		  <!-- Automate me --> <!-- use case assume this value must be provided and as a parameter in the powershell-->


        </MonitoredSystems>
      </GlobalConnection>
    </Connections>
  </GlobalConnections>
  <log4net>
    <appender name="console" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="file" type="log4net.Appender.RollingFileAppender">
      <file value="C:\Program Files (x86)\serviceA\ServiceA.log" />
      <appendToFile value="true" />
      <rollingStyle value="Date" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <maxSizeRollBackups value="7" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%property{log4net:HostName} %date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="lossyBuffer" type="log4net.Appender.BufferingForwardingAppender">
      <bufferSize value="100" />
      <lossy value="true" />
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="ERROR" />
      </evaluator>
      <lossyEvaluator type="log4net.Core.LevelEvaluator">
        <threshold value="WARN" />
      </lossyEvaluator>
      <appender-ref ref="file" />
      <fix value="462" />
    </appender>
    <root>
      <level value="DEBUG" /> 
		<!-- Automate me --> <!-- use case assume default value as per above, allow the powershell module to override this -->	  


      <appender-ref ref="lossyBuffer" />
    </root>
  </log4net>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="Default" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="2147483647" maxBufferPoolSize="524288" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
        


			<security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
				  <!-- Automate me -- BOTH lines above --> 
				  <!-- use case assume default value as per above, allow the powershell module to override this. Its expected a client crential type would be selected as per below and you would 
					be expected to set the security mode as well automatically without this being provided.-->
				  <!-- 
				  ClientCredential Types
					None -- If selected then security mode="None" 
					Windows  -- If selected then security mode="Transport" 
					Username  -- If selected then security mode="Transport" 	
					Certificate  -- If selected then security mode="Transport" 
					Issued Token	 -- If selected then security mode="Transport" 					
				  -->
				  
				  
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost/someservice.svc" binding="basicHttpBinding" bindingConfiguration="Default" contract="CSEHealthcare.Service.DataContracts.ServiceContracts.IDischargeSummaryServiceContract" />
	  <!-- Automate me --> <!-- use case assume default value as per above, allow the powershell module to override this -->
	  
    </client>
  </system.serviceModel>
</configuration>
